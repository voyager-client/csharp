// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace com.appscode.voyager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class V1beta1CertificateDetails
    {
        /// <summary>
        /// Initializes a new instance of the V1beta1CertificateDetails class.
        /// </summary>
        public V1beta1CertificateDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1beta1CertificateDetails class.
        /// </summary>
        public V1beta1CertificateDetails(string certStableURL, string certURL, string accountRef = default(string), System.DateTime? notAfter = default(System.DateTime?), System.DateTime? notBefore = default(System.DateTime?), string serialNumber = default(string))
        {
            AccountRef = accountRef;
            CertStableURL = certStableURL;
            CertURL = certURL;
            NotAfter = notAfter;
            NotBefore = notBefore;
            SerialNumber = serialNumber;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountRef")]
        public string AccountRef { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "certStableURL")]
        public string CertStableURL { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "certURL")]
        public string CertURL { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notAfter")]
        public System.DateTime? NotAfter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notBefore")]
        public System.DateTime? NotBefore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "serialNumber")]
        public string SerialNumber { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CertStableURL == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CertStableURL");
            }
            if (CertURL == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CertURL");
            }
        }
    }
}
