// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace com.appscode.voyager.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class V1beta1CertificateStatus
    {
        /// <summary>
        /// Initializes a new instance of the V1beta1CertificateStatus class.
        /// </summary>
        public V1beta1CertificateStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1beta1CertificateStatus class.
        /// </summary>
        /// <param name="acmeUserSecretName">Deprecated</param>
        /// <param name="certificateObtained">Deprecated</param>
        /// <param name="details">Deprecated</param>
        /// <param name="message">Deprecated</param>
        public V1beta1CertificateStatus(string acmeUserSecretName = default(string), bool? certificateObtained = default(bool?), IList<V1beta1CertificateCondition> conditions = default(IList<V1beta1CertificateCondition>), System.DateTime? creationTime = default(System.DateTime?), V1beta1ACMECertificateDetails details = default(V1beta1ACMECertificateDetails), V1beta1CertificateDetails lastIssuedCertificate = default(V1beta1CertificateDetails), string message = default(string))
        {
            AcmeUserSecretName = acmeUserSecretName;
            CertificateObtained = certificateObtained;
            Conditions = conditions;
            CreationTime = creationTime;
            Details = details;
            LastIssuedCertificate = lastIssuedCertificate;
            Message = message;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets deprecated
        /// </summary>
        [JsonProperty(PropertyName = "acmeUserSecretName")]
        public string AcmeUserSecretName { get; set; }

        /// <summary>
        /// Gets or sets deprecated
        /// </summary>
        [JsonProperty(PropertyName = "certificateObtained")]
        public bool? CertificateObtained { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "conditions")]
        public IList<V1beta1CertificateCondition> Conditions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creationTime")]
        public System.DateTime? CreationTime { get; set; }

        /// <summary>
        /// Gets or sets deprecated
        /// </summary>
        [JsonProperty(PropertyName = "details")]
        public V1beta1ACMECertificateDetails Details { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastIssuedCertificate")]
        public V1beta1CertificateDetails LastIssuedCertificate { get; set; }

        /// <summary>
        /// Gets or sets deprecated
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Conditions != null)
            {
                foreach (var element in Conditions)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Details != null)
            {
                Details.Validate();
            }
            if (LastIssuedCertificate != null)
            {
                LastIssuedCertificate.Validate();
            }
        }
    }
}
